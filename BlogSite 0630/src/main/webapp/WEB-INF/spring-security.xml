<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/security
 http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <beans:bean id="webexpressionHandler" 
                class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

    <http pattern="/login" security="none" />
    <http pattern="/css/**" security="none" />
    <http pattern="/js/**" security="none" />
    <http pattern="/fonts/**" security="none" />
    <http pattern="/img/**" security="none" />

    <http auto-config="true" use-expressions="false">
        <form-login login-processing-url="/j_spring_security_check"
                    login-page="/login"
                    authentication-failure-url="/login?login_error=1"/>
       
        <intercept-url pattern="/" 
                       access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/index" 
                       access="IS_AUTHENTICATED_ANONYMOUSLY" />
        
        <intercept-url pattern="/displayAddPost" 
                       access="ROLE_USER" />
        <intercept-url pattern="/displaySelectEditPost" 
                       access="ROLE_USER" />
        
        <intercept-url pattern="/displayAddStaticPost" 
                       access="ROLE_ADMIN" />
        <intercept-url pattern="/DisplayPublishDelete" 
                       access="ROLE_ADMIN" />
    </http>
    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

<!--
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="user" 
                      password="user" 
                      authorities="ROLE_USER" />
                <user name="admin" 
                      password="admin" 
                      authorities="ROLE_USER, ROLE_ADMIN" />
            </user-service>
        </authentication-provider>
    </authentication-manager>
-->   
     
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="encoder"/>
            <jdbc-user-service id="userService"
                               data-source-ref="dataSource"
                               users-by-username-query=
                              "select user_blog_name as username, user_blog_password as password, 
1 as enabled from user_blog where user_blog_name=?"
                               authorities-by-username-query=
            "select user_blog_name as username, role.role_name as authority from role 
inner join role_has_user_blog on role_has_user_blog.role_role_id = role.role_id 
inner join user_blog on user_blog.user_blog_id = role_has_user_blog.user_blog_user_blog_id 
where user_blog.user_blog_name = ?"/>
        </authentication-provider>
    </authentication-manager> 
     
</beans:beans>
