<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
              xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"> 

    <!-- Bean definitions go here -->
    <tx:annotation-driven />

    <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" 
              value="jdbc:mysql://localhost:3306/blogsite_test" />
        <property name="username" value="root" />
        <property name="password" value="root" />
        <property name="initialSize" value="5" />
        <property name="maxTotal" value="10" />
    </bean>

    <bean id="transactionManager"
     class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="blogDao"
          class="com.sg.blogsite.dao.BlogDaoDbImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="categoryDao"
          class="com.sg.blogsite.dao.CategoryDaoDbImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    
    <bean id="roleDao"
          class="com.sg.blogsite.dao.RoleDaoDbImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    
    <bean id="tagDao"
          class="com.sg.blogsite.dao.TagDaoDbImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="userBlogDao"
          class="com.sg.blogsite.dao.UserBlogDaoDbImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="blogServiceLayer" 
       class="com.sg.blogsite.service.BlogServiceLayerImpl">
        <constructor-arg ref="blogDao"/>
    </bean>

    <bean id="categoryServiceLayer" 
       class="com.sg.blogsite.service.CategoryServiceLayerImpl">
        <constructor-arg ref="categoryDao"/>
    </bean>

    <bean id="roleServiceLayer" 
       class="com.sg.blogsite.service.RoleServiceLayerImpl">
        <constructor-arg ref="roleDao"/>
    </bean>

    <bean id="tagServiceLayer" 
       class="com.sg.blogsite.service.TagServiceLayerImpl">
        <constructor-arg ref="tagDao"/>
    </bean>

    <bean id="userBlogServiceLayer" 
       class="com.sg.blogsite.service.UserBlogServiceLayerImpl">
        <constructor-arg ref="userBlogDao"/>
    </bean>

</beans>
